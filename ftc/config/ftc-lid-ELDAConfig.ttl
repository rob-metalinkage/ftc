##############################################################
#
#
# This an API to support exposing a view of available resources for a set of datasets described in VOID
# (combinations of views, formats, languages)
# This can be used to discover the alternative information resource URI for a given LID - by inferring the resources exposed at the set level by RESTful services for example.
#
# Author: Rob Atkinson, CSIRO Land & Water
#
#
# Copyright (c) CSIRO 2012
# Re-use permitted according to Creative Commons Attribution 3.0 Australia (CC BY 3.0)
# see <http://creativecommons.org/licenses/by/3.0/au/>
#
# Contact: Robert A Atkinson
#          CSIRO Land and Water
#          Australia
#          rob.atkinson "at" csiro.au
#
# The configuration should only need the SPARQL endpoint customised (To be confirmed)
#
##############################################################

## Common prefixes - don't change these.
@prefix api:     <http://purl.org/linked-data/api/vocab#> .
@prefix dc:      <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix elda:    <http://www.epimorphics.com/vocabularies/lda#> .
@prefix foaf:    <http://xmlns.com/foaf/0.1/> .
@prefix owl:     <http://def.seegrid.csiro.au/isotc211//owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos:    <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .

# LID metamodel - common - used in data
@prefix lid:    <http://id.sirf.net/def/schema/lid/> .
@prefix lu:    <http://id.sirf.net/def/schema/sirf-relations/> .

#LID for FTC, used in API
@prefix ftclid:    <http://def.seegrid.csiro.au/def/lid-ftc#> .

@prefix void: <http://rdfs.org/ns/void#> .

api:Viewer
    ftclid:hasFormat ftclid:rdfxml, ftclid:rdfttl, ftclid:html, ftclid:json, ftclid:xml .

ftclid:hasFormat
    a rdf:Property;
    rdfs:Domain api:Viewer;
    rdfs:Range ftclid:format;
    .


# and a basic API...
#
ftclid:lid a api:API;
    api:maxPageSize "50";
    api:defaultPageSize "10";
    api:defaultFormatter [
            a api:XsltFormatter;
            api:name "html";
            api:stylesheet "lda-assets/resources/dna/transform/make_lids.xsl";
            api:mimeType "text/html";
    ];

    api:variable [api:name "webapp"; api:value "/dna"];

    api:variable
        [api:name "SISSDefaultResourceDirBase"; api:value "{webapp}/lda-assets/resources/siss-default/"],
        [api:name "myResourceDirBase"; api:value "{webapp}/lda-assets/resources/ftc/"],
        [api:name "_resourceRoot"; api:value "{webapp}/"],
        [api:name "resourceEndPoint"; api:value "{webapp}/ftc/resourcelist?baseuri="],
        [api:name "serviceTitle"; api:value "Feature Type Catalog: LID (Linked Data Identifier) API"],
        [api:name "serviceAuthor"; api:value "Rob Atkinson"],
        [api:name "serviceAuthorEmail"; api:value "rob@metalinkage.com.au"],
        [api:name "serviceHomePage"; api:value "http://demo.metalinkage.com.au"];
    api:endpoint ftclid:resourceListEndpoint;
    api:defaultViewer api:describeViewer;
    rdfs:label "Linked Data Identifier API for Feature Type Catalog"@en;

    rdfs:seeAlso <https://wiki.csiro.au/display/SIRF/FeatureTypeCatalog>;

    api:sparqlEndpoint <http://localhost:8080/openrdf-sesame/repositories/ftc>
    .

<http://localhost:8080/openrdf-sesame/repositories/ftc> elda:supportsNestedSelect true .

# API endpoint to provide a list of available resources for a given item
ftclid:resourceListEndpoint a api:ItemEndpoint;
        rdfs:comment "Describe what Web resources are available for a given identifier";
        api:uriTemplate "/ftc/resourcelist?baseuri={BURI}&item={objectid}";
        api:exampleRequestPath "/ftc/resourcelist?baseuri=http://demo.metalinkage.com.au/def/schema/hy_features/abstracthydrofeature&item=HY_Basin";
        api:itemTemplate "{BURI}";
        api:variable  [ api:name "BURI"; api:type rdfs:Resource ];
        api:selector [
                api:where "?item a void:Dataset  .";
        ];
        api:defaultViewer ftclid:linksViewer;
        api:viewer ftclid:linksViewer;
        .
ftclid:lookup a api:ItemEndpoint;
    rdfs:comment "Return alternative identifier in a target namespace";
    	api:variable        [api:name "title"; api:value "Lookup: id in target namespace" ] ;
    api:uriTemplate "/lu/alt?uri={URI}&altns={NS}";
    api:variable  [ api:name "URI"; api:type rdfs:Resource ];
    api:variable  [ api:name "NS"; api:type xsd:string ];
#     api:exampleRequestPath "/lu/alt?uri=http://id.sirf.net/siset/UNGEGN/IDN&altns=http://id.sirf.net/siset/UN/UNSTATS-countries";

   api:selector [
        api:where "GRAPH ?g {?URI owl:sameAs ?item  FILTER (STRSTARTS(STR(?item),?NS)) .} "; 
    ];

    api:defaultViewer lu:uriViewer;
    api:viewer lu:uriViewer;
    .
    
# incomplete - need to be able to construct properties in result graphs and use invers properties to get a list of links using the api config as data
ftclid:linksViewer a api:Viewer;
    api:name "Resources for item";
    api:property rdf:type, rdfs:label , (rdf:type rdfs:label ) , void:feature, void:sparqlendpoint, (void:feature rdfs:label) , (void:feature lid:viewName), (void:feature lid:featurescope) , (void:feature dcterms:hasFormat ) , (void:feature dcterms:hasFormat lid:ldatoken);
    .

   
ftclid:uriViewer a api:Viewer;
    api:name "alternate URI";
    api:property (lu:shortid);
    .
 
# VOCABULARY


lid:viewName
   a rdfs:Property;
    rdfs:label "short name token for a information viewpoint"@en;
    api:label "viewName";
    .


lid:featurescope
   a rdfs:Property;
    rdfs:label "short name token for a information viewpoint"@en;
    api:label "featurescope";
    .


lid:ldatoken
   a rdfs:Property;
    rdfs:label "short name token for a format"@en;
    api:label "ldatoken";
    .

ftclid:format
    a rdfs:Class;
    rdfs:label "Information about formats and related mime types and extensions"@en;
    .

ftclid:fileext
    a rdfs:Property;
    rdfs:label "file extension to use to access format"@en;
    .

ftclid:handle
    a rdfs:Property;
    rdfs:label "handle to use to use in _format parameter to specify format"@en;
    .

ftclid:rdfxml
    rdfs:label "RDF/XML";
    ftclid:handle "rdf/xml";  # form used in _format= argument
    ftclid:fileext "rdf";     # form used in file extension form
    .

ftclid:rdfttl
    rdfs:label "RDF Turtle";
    ftclid:handle "ttl" ;
    ftclid:fileext "ttl"
    .

ftclid:html
    rdfs:label "HTML";
    ftclid:handle "html";
    ftclid:fileext "html";
    .
